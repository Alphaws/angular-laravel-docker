networks:
  traefik:
    external: true
  app-network:
    driver: bridge

services:
  database:
    image: mariadb:latest
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: 1
    volumes:
      - ./docker/database:/var/lib/mysql
    ports:
      - ${DBS_PORT}:3306
    networks:
      - app-network

  backend:
    build:
      args:
        HOST_USER: user
        HOST_UID: 1000
      context: .
      dockerfile: ./docker/backend.dockerfile
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./${BACKEND_DIR}:/var/www/html
    ports:
      - ${SSH_PORT}:22
    networks:
      - app-network
      - traefik

  backend-web:
    image: nginx:latest
    depends_on:
      - backend
      - database
    restart: unless-stopped
    working_dir: /var/www/html
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.ald-backend.rule=${BACKEND_HOST}
      - traefik.http.routers.ald-backend.entrypoints=websecure
      - traefik.http.routers.ald-backend.tls=true
      - traefik.http.routers.ald-backend.tls.certresolver=myresolver
      - traefik.http.routers.ald-backend.service=ald-backend@docker
      - traefik.log.level=${LOG_LEVEL}
      - traefik.http.services.ald-backend.loadbalancer.server.port=80
    volumes:
      - ./${BACKEND_DIR}:/var/www/html
      - ./docker/backend.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
      - traefik

  frontend:
#    image: nginx:latest
    build:
      args:
        HOST_USER: user
        HOST_UID: 1000
      context: ./docker
      dockerfile: frontend.dockerfile
    depends_on:
      - backend-web
    restart: unless-stopped
    working_dir: /var/www/html
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.ald-frontend.rule=${FRONTEND_HOST}
      - traefik.http.routers.ald-frontend.entrypoints=websecure
      - traefik.http.routers.ald-frontend.tls=true
      - traefik.http.routers.ald-frontend.tls.certresolver=myresolver
      - traefik.log.level=${LOG_LEVEL}
      - traefik.http.services.ald-frontend.loadbalancer.server.port=80
    volumes:
      - ./${FRONTEND_DIR}/dist/html:/var/www/html
      - ./docker/frontend.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
      - traefik

  redis-cache:
    image: redis
    restart: unless-stopped
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./docker/redis:/data
    networks:
      - app-network
